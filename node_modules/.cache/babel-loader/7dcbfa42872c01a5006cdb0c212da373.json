{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/bay/Work/Pattern/pages/index.js\";\nimport React from 'react';\nimport Pages from './Pages';\nimport \"isomorphic-fetch\";\nimport { Fetch } from './Redux/Action';\n\nfunction Page(_ref) {\n  var dataArticles = _ref.dataArticles;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Pages, {\n    dataArticles: dataArticles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n\nPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, apiKey, page, pageSize, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n            window.addEventListener('online', function () {\n              console.log('online');\n            });\n            window.addEventListener('offline', function () {\n              console.log('offline');\n            });\n            apiKey = '3e6d0f91b9f14b00a5e63f63eb35ee8b', page = 1, pageSize = 5;\n            _context.next = 6;\n            return fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=\".concat(apiKey, \"&page=\").concat(page, \"&pageSize=\").concat(pageSize));\n\n          case 6:\n            res = _context.sent;\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            data = _context.sent;\n\n            if (navigator.onLine) {\n              console.log('online');\n            } else {\n              console.log('offline');\n            }\n\n            return _context.abrupt(\"return\", {\n              dataArticles: data.articles\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Page;","map":{"version":3,"sources":["/home/bay/Work/Pattern/pages/index.js"],"names":["React","Pages","Fetch","Page","dataArticles","getInitialProps","req","window","addEventListener","console","log","apiKey","page","pageSize","fetch","res","json","data","navigator","onLine","articles"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kBAAP;AACA,SAASC,KAAT,QAAuB,gBAAvB;;AAEA,SAASC,IAAT,OAAgC;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AAC9B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEA,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD;;AACDD,IAAI,CAACE,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AACrBC,YAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtCC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,aAFD;AAGAH,YAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,YAAM;AACvCC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,aAFD;AAGIC,YAAAA,MAPiB,GAOR,kCAPQ,EAQrBC,IARqB,GAQR,CARQ,EASrBC,QATqB,GASR,CATQ;AAAA;AAAA,mBAUHC,KAAK,kEAA2DH,MAA3D,mBAA0EC,IAA1E,uBAA2FC,QAA3F,EAVF;;AAAA;AAUfE,YAAAA,GAVe;AAAA;AAAA,mBAWFA,GAAG,CAACC,IAAJ,EAXE;;AAAA;AAWfC,YAAAA,IAXe;;AAYrB,gBAAGC,SAAS,CAACC,MAAb,EAAoB;AAClBV,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,aAFD,MAEO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAhBoB,6CAiBd;AAAEN,cAAAA,YAAY,EAAEa,IAAI,CAACG;AAArB,aAjBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAejB,IAAf","sourcesContent":["import React from 'react';\nimport Pages from './Pages';\nimport \"isomorphic-fetch\";\nimport { Fetch } from  './Redux/Action';\n\nfunction Page({ dataArticles }) {\n  return <div>\n    <Pages dataArticles={dataArticles}/>\n  </div>\n}\nPage.getInitialProps = async ({ req }) => {\n  window.addEventListener('online', () => {\n    console.log('online')\n  });\n  window.addEventListener('offline', () => {\n    console.log('offline')\n  })\n  let apiKey = '3e6d0f91b9f14b00a5e63f63eb35ee8b',\n  page       = 1, \n  pageSize   = 5;\n  const res = await fetch(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}&page=${page}&pageSize=${pageSize}`);\n  const data = await res.json()\n  if(navigator.onLine){\n    console.log('online')\n  } else {\n    console.log('offline')\n  }\n  return { dataArticles: data.articles }\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}